from flask_login import UserMixin
from . import db
from datetime import datetime

class User(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    email = db.Column(db.String(100), unique=True)
    password = db.Column(db.String(100))
    name = db.Column(db.String(1000))
    role = db.Column(db.String(1000))

class TestCodes(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    test_code = db.Column(db.String(100), unique=True)
    client_name = db.Column(db.String(100))
    client_link = db.Column(db.String(100))
    client_username = db.Column(db.String(1000))
    client_password = db.Column(db.String(100))
    test_date_from = db.Column(db.String(100))
    test_date_to = db.Column(db.String(100))
    test_date = db.Column(db.String(100))
    test_month = db.Column(db.String(100))
    user_id = db.Column(db.Integer)
    test_modules = db.Column(db.String (100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    updated_at = db.Column(db.DateTime, nullable=False)

class CalendarFilterUse(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    filter_name = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    updated_at = db.Column(db.DateTime, nullable=False)

class CalendarFilterTesting(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    filter_id = db.Column(db.Integer)
    search_provider = db.Column(db.String(100))
    patient_name = db.Column(db.String(100))
    procedure_code = db.Column(db.String(100))
    unsearch_provider = db.Column(db.String(100))
    status = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    updated_at = db.Column(db.DateTime, nullable=False)

class CalendarMetricTesting(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    bd_sched_amount = db.Column(db.String(100))
    sd_sched_amount = db.Column(db.String(100))
    bd_goal = db.Column(db.String(100))
    sd_goal = db.Column(db.String(100))
    bd_production = db.Column(db.String(100))
    sd_production = db.Column(db.String(100))
    bd_appt = db.Column(db.String(100))
    sd_appt = db.Column(db.String(100))
    bd_npts = db.Column(db.String(100))
    sd_npts = db.Column(db.String(100))
    status_sched_amount = db.Column(db.String(100))
    status_npts = db.Column(db.String(100))
    status_goal = db.Column(db.String(100))
    status_production = db.Column(db.String(100))
    status_appt = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    updated_at = db.Column(db.DateTime, nullable=False)

class CalendarApptPerDayTest(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    pts_name = db.Column(db.String(100))
    pts_appt_date = db.Column(db.String(100))
    appt_amount = db.Column(db.String(100))
    appt_procedure = db.Column(db.String(100))
    appt_date_search = db.Column(db.String(100))
    status = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    updated_at = db.Column(db.DateTime, nullable=False)

class CalendarApptValidation(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    test_date_from = db.Column(db.String(100))
    test_date_to = db.Column(db.String(100))
    pts_name = db.Column(db.String(100))
    pts_procedure = db.Column(db.String(100))
    pts_providers = db.Column(db.String(100))
    pts_appt_status = db.Column(db.String(100))
    pts_amount = db.Column(db.String(100))
    pts_date = db.Column(db.String(100))
    pts_status = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    updated_at = db.Column(db.DateTime, nullable=False)
    
class EodTestResults(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    collection_main = db.Column(db.String(100))
    collection_bd = db.Column(db.String(100))
    collection_email = db.Column(db.String(100))
    adjustments_main = db.Column(db.String(100))
    adjustments_bd = db.Column(db.String(100))
    adjustments_email = db.Column(db.String(100))
    case_accpt_main = db.Column(db.String(100))
    case_accpt_bd = db.Column(db.String(100))
    case_accpt_email = db.Column(db.String(100))
    miss_ref_main = db.Column(db.String(100))
    miss_ref_bd = db.Column(db.String(100))
    miss_ref_email = db.Column(db.String(100))
    no_show_main = db.Column(db.String(100))
    no_show_bd = db.Column(db.String(100))
    no_show_email = db.Column(db.String(100))
    daily_coll_main = db.Column(db.String(100))
    daily_coll_bd = db.Column(db.String(100))
    daily_coll_email = db.Column(db.String(100))
    hyg_reapp_main = db.Column(db.String(100))
    hyg_reapp_bd = db.Column(db.String(100))
    hyg_reapp_email = db.Column(db.String(100))
    new_patient_main = db.Column(db.String(100))
    new_patient_bd = db.Column(db.String(100))
    new_patient_email = db.Column(db.String(100))
    sd_treat_main = db.Column(db.String(100))
    sd_treat_bd = db.Column(db.String(100))
    sd_treat_email = db.Column(db.String(100))
    pt_portion_main = db.Column(db.String(100))
    pt_portion_bd = db.Column(db.String(100))
    pt_portion_email = db.Column(db.String(100))
    booked_prod_main = db.Column(db.String(100))
    booked_prod_email = db.Column(db.String(100))
    daily_net_main = db.Column(db.String(100))
    daily_net_email = db.Column(db.String(100))
    daily_gross_main = db.Column(db.String(100))
    daily_gross_email = db.Column(db.String(100))
    sched_vs_goal_main = db.Column(db.String(100))
    sched_vs_goal_email = db.Column(db.String(100))
    general_main = db.Column(db.String(100))
    general_email = db.Column(db.String(100))
    ortho_prod_main = db.Column(db.String(100))
    ortho_prod_email = db.Column(db.String(100))
    perio_prod_main = db.Column(db.String(100))
    perio_prod_email = db.Column(db.String(100))
    oral_surgery_main = db.Column(db.String(100))
    oral_surgery_email = db.Column(db.String(100))
    num_prod_main = db.Column(db.String(100))
    num_prod_email = db.Column(db.String(100))
    adp_main = db.Column(db.String(100))
    adp_email = db.Column(db.String(100))
    specialty_main = db.Column(db.String(100))
    specialty_email = db.Column(db.String(100))
    total_pts_main = db.Column(db.String(100))
    total_pts_email = db.Column(db.String(100))
    total_office_main = db.Column(db.String(100))
    total_office_email = db.Column(db.String(100))
    appts_changed_main = db.Column(db.String(100))
    appts_changed_email = db.Column(db.String(100))
    appts_cancel_main = db.Column(db.String(100))
    appts_cancel_email = db.Column(db.String(100))
    hyg_reserve_main = db.Column(db.String(100))
    hyg_reserve_email = db.Column(db.String(100))
    hyg_cap_main = db.Column(db.String(100))
    hyg_cap_email = db.Column(db.String(100))
    react_calls_main = db.Column(db.String(100))
    react_calls_email = db.Column(db.String(100))
    res_apps_main = db.Column(db.String(100))
    res_apps_email = db.Column(db.String(100))
    endo_main = db.Column(db.String(100))
    endo_email = db.Column(db.String(100))
    clear_aligners_main = db.Column(db.String(100))
    clear_aligners_email = db.Column(db.String(100))
    guest_appt_main = db.Column(db.String(100))
    guest_appt_email = db.Column(db.String(100))
    unsched_treat_main = db.Column(db.String(100))
    unsched_treat_email = db.Column(db.String(100))
    recalls_main = db.Column(db.String(100))
    recalls_email = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    updated_at = db.Column(db.DateTime, nullable=False)

class DashboardBreakdownTest(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    # net production
    base_netprod = db.Column(db.String(100))
    bd_netprod = db.Column(db.String(100))
    status_netprod = db.Column(db.String(100))
    # gross production
    base_grossprod = db.Column(db.String(100))
    bd_grossprod = db.Column(db.String(100))
    status_grossprod = db.Column(db.String(100))
    # collection
    base_coll = db.Column(db.String(100))
    bd_coll = db.Column(db.String(100))
    status_coll = db.Column(db.String(100))
    # adjustment
    base_adjust = db.Column(db.String(100))
    bd_adjust = db.Column(db.String(100))
    status_adjust = db.Column(db.String(100))
    # new patient exist
    base_npv = db.Column(db.String(100))
    bd_npv = db.Column(db.String(100))
    status_npv = db.Column(db.String(100))
    # Existing Patients Visits
    base_epv = db.Column(db.String(100))
    bd_epv = db.Column(db.String(100))
    status_epv = db.Column(db.String(100))
    # time
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)

class DashboardProductionTest(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    base_netprod = db.Column(db.String(100))
    provider_data = db.Column(db.String(100))
    providerdata_status = db.Column(db.String(100))
    table_total = db.Column(db.String(100))
    tabletotal_status = db.Column(db.String(100))
    payor_score = db.Column(db.String(100))
    payorscore_status = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)

class DashboardServiceCountTest(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    provider_name = db.Column(db.String(100))
    proced_code = db.Column(db.String(100))
    count_data = db.Column(db.String(100))
    bd_data = db.Column(db.String(100))
    count_status = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)

class DashboardServiceProcedureTest(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    proced_code = db.Column(db.String(100))
    provider_type = db.Column(db.String(100))
    unsearch_result = db.Column(db.String(100))
    proced_status = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)

class DashboardLOBProductionTest(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    line_bussiness = db.Column(db.String(100))
    netprod_base = db.Column(db.String(100))
    providers_data = db.Column(db.String(100))
    table_total = db.Column(db.String(100))
    production_status = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)

class DashboardLOBSpecialityTest(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    production_id = db.Column(db.Integer)
    providers_name = db.Column(db.String(100))
    providers_speciality = db.Column(db.String(100))
    speciality_status = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)

class FiguresMatching(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    client_url = db.Column(db.String(100), nullable=True)
    test_type = db.Column(db.String(100), nullable=True)
    query_param = db.Column(db.String(100), nullable=True)
    test_date = db.Column(db.String(100), nullable=True)
    dash_netProd = db.Column(db.String(100), nullable=True, default='N/A')
    dash_grossProd = db.Column(db.String(100), nullable=True, default='N/A')
    dash_collection = db.Column(db.String(100), nullable=True, default='N/A')
    dash_adjusment = db.Column(db.String(100), nullable=True, default='N/A')
    dash_npt = db.Column(db.String(100), nullable=True, default='N/A')
    dash_pts = db.Column(db.String(100), nullable=True, default='N/A')
    cal_netProd = db.Column(db.String(100), nullable=True, default='N/A')
    cal_grossProd = db.Column(db.String(100), nullable=True, default='N/A')
    cal_npt = db.Column(db.String(100), nullable=True, default='N/A')
    eod_netProd = db.Column(db.String(100), nullable=True, default='N/A')
    eod_grossProd = db.Column(db.String(100), nullable=True, default='N/A')
    eod_collection = db.Column(db.String(100), nullable=True, default='N/A')
    eod_adjusment = db.Column(db.String(100), nullable=True, default='N/A')
    eod_npt = db.Column(db.String(100), nullable=True, default='N/A')
    eod_pts = db.Column(db.String(100), nullable=True, default='N/A')
    mh_netProd = db.Column(db.String(100), nullable=True, default='N/A')
    mh_grossProd = db.Column(db.String(100), nullable=True, default='N/A')
    mh_collection = db.Column(db.String(100), nullable=True, default='N/A')
    mh_npt = db.Column(db.String(100), nullable=True, default='N/A')
    mh_pts = db.Column(db.String(100), nullable=True, default='N/A')
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)


class TxMinerDefaultTest(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    month = db.Column(db.String(100))
    mv_pending_sched = db.Column(db.String(100))
    mv_pending_unsched = db.Column(db.String(100))
    mv_active_production = db.Column(db.String(100))
    breakdown_pending_sched = db.Column(db.String(100))
    breakdown_pending_unsched = db.Column(db.String(100))
    breakdown_active_production = db.Column(db.String(100))
    pending_sched_status = db.Column(db.String(100))
    pending_unsched_status = db.Column(db.String(100))
    pending_active_production = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    updated_at = db.Column(db.DateTime, nullable=False)

class TxMinerProviderTest(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    month_breakdown = db.Column(db.String(100))
    pt_name = db.Column(db.String(100))
    provider_filtered = db.Column(db.String(100))
    provider_pt_table = db.Column(db.String(100))
    status = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    updated_at = db.Column(db.DateTime, nullable=False)

class TxMinerProcedureTest(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    month_breakdown = db.Column(db.String(100))
    procedure_code_filtered = db.Column(db.String(100))
    procedure_desc_filtered = db.Column(db.String(100))
    procedure_code_table = db.Column(db.String(100))
    procedure_desc_table = db.Column(db.String(100))
    status = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    updated_at = db.Column(db.DateTime, nullable=False)

class TxMinerPatientTest(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100))
    month_breakdown = db.Column(db.String(100))
    patient_name_filtered = db.Column(db.String(100))
    patient_name_breakdown = db.Column(db.String(100))
    status = db.Column(db.String(100))
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    updated_at = db.Column(db.DateTime, nullable=False)
    
class MhMain(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    ytr_gross_prod = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_goal = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_net_prod = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_collection = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_collection_percent = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_prod_per_patient = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_npt = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_care_progress = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_copay = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_tx_acceptance = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_tx_presented = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_tx_completed = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_tx_sched = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_tx_unsched = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_hyg_prod = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_hyg_reappt = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_hyg_sched = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_not_sched = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_broken_appt = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_unshed_broken_appt = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_npt_not_resched = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_pts_not_resched = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_sched_prod = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_goal = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_npt_actual = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_npt_sched = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_hyg_prod_sched = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_hyg_prod_actual = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_unsched_tx = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_unsched_family_members = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_unsched_hyg = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_patient_bday = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_past_due_ar = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_due_bwx = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_due_fmx = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_sched_prod = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_goal = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_npt_sched = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_hyg_prod_sched = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_unsched_tx = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_unsched_family_members = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_unsched_hyg = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_past_due_ar = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_due_bwx = db.Column(db.String(100), nullable=True, default='N/A')
    twm_due_fmx = db.Column(db.String(100), nullable=True, default='N/A')
    
class MhBreakdown(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    ytr_gross_prod = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_net_prod = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_collection = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_collection_percent = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_prod_per_patient = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_npt = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_care_progress = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_copay = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_tx_acceptance = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_tx_presented = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_tx_completed = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_tx_sched = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_tx_unsched = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_hyg_prod = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_hyg_reappt = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_hyg_sched = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_not_sched = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_broken_appt = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_unshed_broken_appt = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_npt_not_resched = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_pts_not_resched = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_npt_actual = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_npt_sched = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_hyg_prod_sched = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_hyg_prod_actual = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_unsched_tx = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_unsched_family_members = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_unsched_hyg = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_patient_bday = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_past_due_ar = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_due_bwx = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_due_fmx = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_npt_sched = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_hyg_prod_sched = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_unsched_tx = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_unsched_family_members = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_unsched_hyg = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_past_due_ar = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_due_bwx = db.Column(db.String(100), nullable=True, default='N/A')
    twm_due_fmx = db.Column(db.String(100), nullable=True, default='N/A')
    

# class MhMail(UserMixin, db.Model):
#     id = db.Column(db.Integer, primary_key=True)
#     user_id = db.Column(db.Integer)
#     test_code = db.Column(db.String(100), nullable=True)
#     created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
#     ytr_gross_prod = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_goal = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_net_prod = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_collection = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_collection_percent = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_prod_per_patient = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_npt = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_care_progress = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_copay = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_tx_acceptance = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_tx_presented = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_tx_completed = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_tx_sched = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_tx_unsched = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_hyg_prod = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_hyg_reappt = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_hyg_sched = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_not_sched = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_broken_appt = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_unshed_broken_appt = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_npt_not_resched = db.Column(db.String(100), nullable=True, default='N/A')
#     ytr_pts_not_resched = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_sched_prod = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_goal = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_npt_actual = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_npt_sched = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_hyg_prod_sched = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_hyg_prod_actual = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_unsched_tx = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_unsched_family_members = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_unsched_hyg = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_patient_bday = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_past_due_ar = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_due_bwx = db.Column(db.String(100), nullable=True, default='N/A')
#     tdy_due_fmx = db.Column(db.String(100), nullable=True, default='N/A')
#     tmw_sched_prod = db.Column(db.String(100), nullable=True, default='N/A')
#     tmw_goal = db.Column(db.String(100), nullable=True, default='N/A')
#     tmw_npt_sched = db.Column(db.String(100), nullable=True, default='N/A')
#     tmw_hyg_prod_sched = db.Column(db.String(100), nullable=True, default='N/A')
#     tmw_unsched_tx = db.Column(db.String(100), nullable=True, default='N/A')
#     tmw_unsched_family_members = db.Column(db.String(100), nullable=True, default='N/A')
#     tmw_unsched_hyg = db.Column(db.String(100), nullable=True, default='N/A')
#     tmw_past_due_ar = db.Column(db.String(100), nullable=True, default='N/A')
#     tmw_due_bwx = db.Column(db.String(100), nullable=True, default='N/A')
#     twm_due_fmx = db.Column(db.String(100), nullable=True, default='N/A')

    
class MhScorecard(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    ytr_prod = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_goal = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_collection = db.Column(db.String(100), nullable=True, default='N/A')
    ytr_npt_actual = db.Column(db.String(100), nullable=True, default='N/A')
    yrt_broken_appt = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_sched_prod = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_goal = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_npt_actual = db.Column(db.String(100), nullable=True, default='N/A')
    tdy_npt_sched = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_sched_prod = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_goal = db.Column(db.String(100), nullable=True, default='N/A')
    tmw_npt = db.Column(db.String(100), nullable=True, default='N/A')
    
class PpTestcodeLogs(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    
class PpAgeFilter(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    patient_age = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)

class PpPIRFilter(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    rem_insurance = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)
    
class PpBalanceFilter(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    balance = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)
    
class PpSIRFilter(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    rem_insurance = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)
    

class PpRemainingBenefits(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    rem_insurance = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)
    
class PpGenderFilter(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    patient_age = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)

class PpStatusFilter(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    patient_status = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)
    
class PpScheduleFilter(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    next_visit = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)


class PpUninsuredFilter(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)    
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    insurance = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)
    
class PpFirstseenFilter(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)    
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    first_seen = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)
    
    
class PpLastSeenFilter(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)    
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    last_seen = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)


class PpFutureVisitFilter(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)    
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    future_visit = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)


class PpFutureHygVisitFilter(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)    
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    future_hyg_visit = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)
    
class PpLastHygVisitFilter(UserMixin, db.Model):   
    id = db.Column(db.Integer, primary_key=True)    
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    last_hyg_visit = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)
     
class PpPerioCareFilter(UserMixin, db.Model): 
    id = db.Column(db.Integer, primary_key=True)    
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    age = db.Column(db.String(100), nullable=True)
    p_status = db.Column(db.String(100), nullable=True)
    patient_pc = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)
    
    
class PpVisitFilter(UserMixin, db.Model): 
    id = db.Column(db.Integer, primary_key=True)    
    user_id = db.Column(db.Integer)
    test_code = db.Column(db.String(100), nullable=True)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.now)
    patient_name = db.Column(db.String(100), nullable=True)
    patient_id = db.Column(db.String(100), nullable=True)
    number_of_visit = db.Column(db.String(100), nullable=True)
    patient_gender = db.Column(db.String(100), nullable=True)
    patient_email = db.Column(db.String(100), nullable=True)
    Condition = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(100), nullable=True)